devtools::use_testthat()
devtools::install_github("r-lib/devtools")
install.packages(c("digest","devtools", "roxygen2", "testthat", "knitr","rstudioapi"))
install.packages(c("digest", "devtools", "roxygen2", "testthat", "knitr", "rstudioapi"))
devtools::install_github("r-lib/devtools")
devtools::install_github("r-lib/devtools")
library(digest)
install.packages(c("digest","devtools", "roxygen2", "testthat", "knitr","rstudioapi"))
install.packages(c("digest", "devtools", "roxygen2", "testthat", "knitr", "rstudioapi"))
library(digest)
library("digest")
install.packages("digest")
remove.packages("digest")
install.packages("digest")
Sys.getenv("R_LIBS_USER")
install.packages(c("digest","devtools", "roxygen2", "testthat", "knitr","rstudioapi"))
install.packages(c("digest", "devtools", "roxygen2", "testthat", "knitr", "rstudioapi"))
devtools::install_github("r-lib/devtools")
# Sys.getenv("R_LIBS_USER")  # For location of Libraries
# Close other R sessions to install certain packages
#install.packages(c("digest","devtools", "roxygen2", "testthat", "knitr","rstudioapi"))
#devtools::install_github("r-lib/devtools")
rstudioapi::isAvailable("0.99.149")
library(roxygen2)
library(testthat)
devtools::session_info()
?export
library(RColorBrewer)
library(srn)
install.packages("srn")
library(srn)
install("srn")
library("devtools")
library(roxygen2)
install("srn")
getwd()
setwd(..)
setwd(./)
setwd(../)
vignette()
vignette(srn)
vignette("srn")
library(srn)
vignette("srn")
?.proj
?proj
library(rgcam)
library(srn)
library(srn)
library(srn)
devtools::check()
library(srn)
library(srn)
?srn.readgcam
srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
gcamProj=NULL # Default Value
dirOutputs=dirOutputs=paste(getwd(),"/Outputs",sep="") # Default Value
)
srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
gcamProj=NULL # Default Value
dirOutputs= paste(getwd(),"/Outputs",sep="") # Default Value
)
srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
gcamProj=NULL, # Default Value
dirOutputs= paste(getwd(),"/Outputs",sep="") # Default Value
)
library(srn)
srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
gcamProj=NULL, # Default Value
dirOutputs= paste(getwd(),"/Outputs",sep="") # Default Value
)
srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
dataProj=NULL, # Default Value
dirOutputs= paste(getwd(),"/Outputs",sep="") # Default Value
)
gcamData<-srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
dataProj=NULL, # Default Value
dirOutputs= paste(getwd(),"/Outputs",sep="") # Default Value
)
gcamData
gcamData<-srn.readgcam(gcamdatabase=paste(getwd(),"/inputs/gcam/example_database_basexdb",sep=""),
queryxml=paste(getwd(),"/inputs/gcam/srnQueries.xml",sep=""),
scenOrigNames=c("example_Reference1","example_Reference2"),
scenNewNames=c("Ref1","Ref2"),
reReadData=T, # Default Value
dataProj=NULL, # Default Value
dirOutputs= paste(getwd(),"/outputs",sep="") # Default Value
)
#---------------------
# Checking
#--------------------
system("R CMD check --help")
library(srn)
library(srn)
a<-srn.colors()
a$elec_renew_colors
devtools::use_package("JGCRI/rgcam")
install_github("JGCRI/rgcam")
devtools::install_github('JGCRI/rgcam')
install.packages(glue)
install.packages("glue")
install.packages("glue")
remove.packages("glue")
install.packages("glue")
library(rgcam)
install.packages("rgcam")
library(rgcam)
install_github("JGCRI/rgcam")
library(devtools)
install_github("JGCRI/rgcam")
install_github("JGCRI/rgcam")
library(rgcam)
install_github("JGCRI/rgcam")
library(rgcam)
install_github("JGCRI/rgcam")
install.packages("Rccp")
library(Rccp)
install_github("JGCRI/rgcam")
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("Rcpp")
library(devtools)
install_github("JGCRI/rgcam")
install_github("JGCRI/rgcam")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
install_github("JGCRI/rgcam")
library(devtools)
install_github("JGCRI/rgcam")
library(rgcam)
library(srn)
gcamdatabase<-"C:/Users/khan404/Desktop/srn/inputs/gcam/example_database_basexdb"
# Use function localDBConn from package rgcam to get a list of scenarios if needed.
localDBConn(gcamdatabase)
?localDBConn
gcamdatabasePath <-"C:/Users/khan404/Desktop/srn/inputs/gcam"
gcamdatabaseName <-"example_database_basexdb"
gcamdatabasePath <-"C:/Users/khan404/Desktop/srn/inputs/gcam"
gcamdatabaseName <-"example_database_basexdb"
# Use function localDBConn from package rgcam to get a list of scenarios if needed.
localDBConn(gcamdatabasePath,gcamdatabaseName)
gcamdatabasePath <-"C:/Users/khan404/Desktop/srn/inputs/gcam"
gcamdatabaseName <-"example_database_basexdb"
# Use function localDBConn from package rgcam to get a list of scenarios if needed.
localDBConn(gcamdatabasePath,gcamdatabaseName)
library(srn)
library(srn)
